import React from "react";
import Layout from "@/components/Admin/Layout";
import RestaurantCard from "@/components/Admin/RestaurantCard";
import SearchBar from "@/components/Admin/SearchBar";
import { RestaurantPostDataType } from "../../../interfaces/index";
import { useQuery } from "react-query";
import { getRestaurant } from "@/services/index";
import { QUERIES } from "../../../constant/Queries";
import { SidebarContextProps } from "../../../interfaces/index";
import { useSidebarContext } from "@/contexts/SidebarContext";
import Image from "next/image";
import Head from "next/head";
import LoadingImg from "../../../public/loadingImg.gif";
import { useTranslation } from "next-i18next";
import { GetServerSideProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";

const Restaurant: React.FC = () => {
  const { selectedCategory, isAdmin } =
    useSidebarContext() as SidebarContextProps;
  const { data } = useQuery(QUERIES.Restaurants, getRestaurant);
  const restaurantsData = data?.data.result.data;
  const { t } = useTranslation("common");

  const filteredData =
    selectedCategory !== "" && selectedCategory !== null
      ? restaurantsData?.filter((restaurant: RestaurantPostDataType) => {
          return restaurant.category_id === selectedCategory;
        })
      : restaurantsData;

  return (
    <>
      {isAdmin ? (
        <>
          <Head>
            <title>Admin | {t("Restaurants")}</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <Layout>
            <div className="px-12 pb-8 md:pr-1 min-h-screen md:h-screen">
              <SearchBar />
              <div className="grid gap-y-8 gap-x-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-4 ">
                {filteredData &&
                  filteredData.map((restaurant: RestaurantPostDataType) => (
                    <RestaurantCard
                      key={(restaurant.id ?? "").toString()}
                      id={(restaurant.id ?? "").toString()}
                      restaurant={restaurant}
                    />
                  ))}
              </div>
            </div>
          </Layout>
        </>
      ) : (
        <Image
          alt="NotFound"
          height={1000}
          width={1000}
          className="h-screen w-screen"
          src={LoadingImg}
        />
      )}
    </>
  );
};

export default Restaurant;
export const getServerSideProps: GetServerSideProps = async ({ locale }) => ({
  props: {
    ...(await serverSideTranslations(locale as string, ["common"])),
  },
});