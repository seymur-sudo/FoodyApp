import Head from "next/head";
import React, { useState } from "react";
import { useRouter } from "next/navigation";
import Image from "next/image";
import { toast } from "react-toastify";
import { useTranslation } from "next-i18next";
import ClientHeader from "@/components/Client/ClientHeader";
import { GetServerSideProps } from "next";
import axios from "axios";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useMutation } from "react-query";

const RegisterPage: React.FC = () => {
  const { t } = useTranslation("common");
  const router = useRouter();

  const [email, setEmail] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const [fullName, setFullName] = useState<string>("");
  const [userName, setUserName] = useState<string>("");

  const { mutate: signupUser } = useMutation({
    mutationFn: async () =>
      await axios.post("/api/auth/signup", {
        email,
        password,
        fullName,
        userName,
      }),
    onSuccess: (data) => {
      if (data) {
        setTimeout(() => {
          toast.success("Registered With Successfully", {
            autoClose: 1000,
          });
        });
        setTimeout(() => {
          router.push("/login");
        }, 2000);
      } else {
        setTimeout(() => {
          toast.error("Please, Enter Correct Email and Password!", {
            autoClose: 1000,
          });
        });
      }
    },
    onError: (error: Error) => {
      console.error("Error:", error);
      toast.error("Please, Enter Right Personal Information!", {
        autoClose: 1000,
      });
    },
  });

  const signupClient = () => {
    signupUser();
  };
  return (
    <>
      <Head>
        <title>Foody | Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="sm:mr-32px sm:ml-32px" style={{ zoom: "0.66" }}>
        <ClientHeader />
        <div className="flex-col mx-3 my-3 flex lg:flex-row sm:mx-0">
          <div
            className="bg-clientRed dark:bg-green-900 py-3 lg:w-3/6 w-full lg:h-[900px] h-[160px] sm:pt-24 sm:pl-40 sm:mr-10 sm:pb-48 sm:pr-15 px-10 rounded-4 mb-11"
            data-aos="fade-right"
          >
            <Image
              alt="register"
              width={100}
              height={100}
              src="/svgs/register.svg"
              className="lg:w-5/6 lg:h-[630px] h-[150px] w-[240px] mx-auto"
            />
          </div>
          <div className="lg:w-2/6 mx-auto w-full" data-aos="fade-left">
            <div className="flex lg:ml-20 mx-auto justify-center flex-row sm:gap-x-16 sm:ml-174px sm:mb-18 sm:mt-105px gap-x-9 mb-15">
              <p
                onClick={() => router.push("/login")}
                className="cursor-pointer dark:text-white text-clientGray sm:text-3xl text-xl font-normal"
              >
                {t("Login")}
              </p>
              <p className="text-clientRed dark:text-green-400 sm:text-3xl text-xl font-medium sm:mr-44">
                {t("Register")}
              </p>
            </div>
            <div className="">
              <div className="mb-26px">
                <p className=" font-body dark:text-white text-lg sm:mb-10px sm:text-xl text-grayInput mb-4 font-medium">
                  {t("Full Name")}
                </p>
                <input
                  onChange={(e) => setUserName(e.target.value)}
                  placeholder={t("Full Name")}
                  className="pl-3 sm:h-68px rounded-5 bg-clientInput w-full h-14 text-lg font-medium"
                />
              </div>
              <div className="mb-26px">
                <p className=" font-body dark:text-white text-lg sm:mb-10px  text-grayInput sm:text-xl mb-4 font-medium">
                  {t("User Name")}
                </p>
                <input
                  onChange={(e) => setFullName(e.target.value)}
                  placeholder={t("User Name")}
                  className="pl-3 rounded-5 sm:h-68px bg-clientInput w-full h-14 text-lg font-medium"
                />
              </div>
              <div className="mb-26px">
                <p className=" font-body text-lg dark:text-white  sm:mb-10px  text-grayInput sm:text-xl mb-4 font-medium">
                  {t("E-mail")}
                </p>
                <input
                  type="email"
                  onChange={(e) => setEmail(e.target.value)}
                  placeholder={t("E-mail")}
                  className=" pl-3 rounded-5 sm:h-68px bg-clientInput w-full h-14 text-lg font-medium"
                />
              </div>
              <div className="mb-26px">
                <p className=" font-body sm:mb-10px text-lg dark:text-white text-grayInput sm:text-xl mb-4 font-medium">
                  {t("Password")}
                </p>
                <input
                  type="password"
                  onChange={(e) => setPassword(e.target.value)}
                  placeholder={t("Password")}
                  className="pl-3 sm:mb-72px rounded-5 sm:h-68px bg-clientInput w-full h-14 text-lg font-medium"
                />
              </div>
            </div>

            <button
              onClick={() => {
                signupClient();
              }}
              className="w-full text-22 rounded-5 text-white sm:h-68px dark:bg-green-900 bg-clientRed font-medium h-14"
            >
              {t("Register")}
            </button>
          </div>
        </div>
      </main>
    </>
  );
};
export default RegisterPage;
export const getServerSideProps: GetServerSideProps = async ({ locale }) => ({
  props: {
    ...(await serverSideTranslations(locale as string, ["common"])),
  },
});
