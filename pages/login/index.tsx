"use client";
import React, { useState } from "react";
import Head from "next/head";
import { useRouter } from "next/navigation";
import Image from "next/image";
import { toast } from "react-toastify";
import { useTranslation } from "next-i18next";
import ClientHeader from "@/components/Client/ClientHeader";
import { GetServerSideProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useMutation } from "react-query";
import axios, { AxiosResponse } from "axios"; 
import {FadeLoader} from "react-spinners"
const LoginPage: React.FC = () => {
  const { t } = useTranslation("common");
  const router = useRouter();
  const [email, setEmail] = useState<string>("");
  const [isLoad, setIsLoad] = useState<boolean>(false)
  const [password, setPassword] = useState<string>("");

  const { mutate: signinUser } = useMutation({
    mutationFn: async () =>
      await axios.post("/api/auth/signin", {
        email,
        password,
      }),
    onSuccess: (data: AxiosResponse) => {
      if (data  && data.data && data.data.user) {
        setIsLoad(true)
        setTimeout(() => {
          toast.success("Signin successfully!", { autoClose: 1000 });
        });
        // console.log(data?.data.user);
        localStorage.setItem("refresh_token", data?.data.user.refresh_token);
        localStorage.setItem("access_token", data?.data.user.access_token);
        setTimeout(() => {
          router.push("/");
        }, 2000);
      } else {
          toast.error("Please, Enter Correct Email and Password! ", {
            autoClose: 1000,
        });
      }
    },
    onError: () => {
      setTimeout(() => {
        toast.error("Please, Enter Correct Email and Password!", {
          autoClose: 1000,
        });
      });
    },
  });

  const signClient = () => {
    signinUser();
  };
  return (
    <>
      <Head>
        <title>Foody | Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className="bg-white dark:bg-black sm:mr-32px sm:ml-32px"
        style={{ zoom: "0.66" }}
      >
        <ClientHeader />
        <div className="md:flex-row flex-col mx-3 my-3 flex sm:mx-0 ">
          <div
            className="lg:w-3/6 md:w-[50%] dark:bg-green-900 w-full bg-clientRed lg:h-fit h-[160px] rounded-4 sm:mr-10"
            data-aos="fade-right"
          >
            <Image
              alt=""
              width={100}
              height={100}
              src="/svgs/login.svg"
              className="lg:w-5/6 lg:h-[740px] w-[240px] h-[150px] lg:ml-32px sm:mt-5 sm:ml-68px lg::mr-24 sm:mb-40 mx-auto"
            />
          </div>
          <div className="lg:w-2/6 md:w-[50%] w-full mx-auto">
            <div className="flex lg:ml-20 flex-row sm:gap-x-16 sm:ml-174px sm:mb-18 sm:mt-105px mt-11 gap-x-9 mb-15 justify-center">
              <p className="text-clientRed dark:text-green-300 sm:text-3xl text-xl font-medium ">
                {t("Login")}
              </p>
              <p
                onClick={() => router.push("/register")}
                className="cursor-pointer dark:text-white text-clientGray sm:text-3xl text-xl font-normal sm:mr-48"
              >
                {t("Register")}
              </p>
            </div>
            <div className="">
              <div className="mb-26px">
                <p className=" font-body text-lg sm:mb-10px dark:text-white  text-grayInput sm:text-xl mb-4 font-medium">
                  {t("E-mail")}
                </p>
                <input
                  placeholder="E-mail"
                  className="pl-3 sm:h-68px  bg-clientInput rounded-5 w-full h-14 text-lg font-medium"
                  onChange={(e) => setEmail(e.target.value)}
                />
              </div>
              <div className="mb-26px">
                <p className=" font-body sm:mb-10px dark:text-white text-lg text-grayInput sm:text-xl mb-4 font-medium">
                  {t("Password")}
                </p>
                <input
                  type="password"
                  placeholder="Password"
                  onChange={(e) => setPassword(e.target.value)}
                  className="pl-3 sm:mb-72px sm:h-68px rounded-5 bg-clientInput w-full h-14 text-lg font-medium"
                />
              </div>
            </div>
            <button
              onClick={() => signClient()}
              className="w-full rounded-5 dark:bg-green-900 text-22 text-white sm:h-68px bg-clientRed font-medium h-14"
            >
              {isLoad ? <div className='flex justify-center items-center mx-0 my-auto'>
                <FadeLoader
                  color="#fff"
                  // size={15}
                />
              </div> : t('Login')}
            </button>
          </div>
        </div>
      </main>
    </>
  );
};
export default LoginPage;
export const getServerSideProps: GetServerSideProps = async ({ locale }) => ({
  props: {
    ...(await serverSideTranslations(locale as string, ["common"])),
  },
});
